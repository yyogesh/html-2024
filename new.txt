
import React, { useState } from 'react';
import { createRoot } from 'react-dom/client';
import { useSelection } from './hooks/useSelection';
import { useToolbarVisibility } from './hooks/useToolbarVisibility';
import { FloatingToolbar } from './components/FloatingToolbar';
import { injectRootElement } from './utils/dom';

const App: React.FC = () => {
  const selection = useSelection();
  const isToolbarVisible = useToolbarVisibility(selection);
  const [isToolbarOpen, setToolbarOpen] = useState(false);

  const handleCloseToolbar = () => {
    setToolbarOpen(false);
  };

  // The logic for the FloatingDot would go here. For simplicity,
  // we'll directly show the toolbar.
  // A `useEffect` would manage the transition from dot to toolbar on hover.
  
  // A useEffect would also be used here to set up the Message Listener and MutationObserver
  // for upload error detection, which would then conditionally render the UploadErrorPopup component.

  if (!selection || !isToolbarVisible) {
    return null;
  }
  
  // A more complete implementation would show a dot first,
  // then the toolbar on hover.
  return (
    <FloatingToolbar
      position={selection.rect}
      selectedText={selection.text}
      onClose={handleCloseToolbar}
    />
  );
};

const rootElement = injectRootElement();
const root = createRoot(rootElement);
root.render(<App />);

// Cleanup session storage on load, as in the original script
try {
  sessionStorage.removeItem('aiglite_toolbar_disabled_once');
} catch (error) {
  console.warn('AIG Lite: SessionStorage not available:', error);
}
