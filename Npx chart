getCurrentDayMarkUpLine(isWeeklyView: boolean): any {
  const today = new Date();
  
  // =======================================================
  // Case 1: The view is the WEEKLY GRID (No Changes Here)
  // =======================================================
  if (isWeeklyView) {
    const monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
    const currentMonthCategory = monthNames[today.getMonth()];

    return {
      silent: true,
      symbol: 'none',
      // The animation for this standard markLine is enabled by default
      animation: true, 
      animationDuration: 1000,
      data: [
        {
          xAxis: currentMonthCategory, 
          lineStyle: {
            color: 'red',
            width: 2,
            type: 'solid'
          },
          label: {
            show: true,
            formatter: 'Current Month',
            position: 'end',
            color: 'red'
          }
        }
      ]
    };
  } 
  
  // =======================================================
  // Case 2: The view is the DAILY CALENDAR (Updated with Animation)
  // =======================================================
  else {
    const formattedDate = `${today.getFullYear()}-${(today.getMonth() + 1).toString().padStart(2, '0')}-${today.getDate().toString().padStart(2, '0')}`;

    return {
      type: 'custom',
      coordinateSystem: 'calendar',
      // This enables animation for the custom series
      animation: true,
      renderItem: (params: any, api: any) => {
        if (!params.coordSys) {
          return;
        }
        
        const coordSys = params.coordSys;
        const xPos = coordSys.x;
        const yStartPos = coordSys.y;
        const yEndPos = yStartPos + coordSys.height;

        return {
          type: 'group',
          children: [
            // Element 1: The Animated Line
            {
              type: 'line',
              // Tell ECharts to animate changes to the shape
              transition: ['shape'], 
              shape: {
                x1: xPos,
                y1: yStartPos,
                x2: xPos,
                y2: yEndPos, // The final shape
              },
              // Define the starting shape for the animation
              enterFrom: {
                shape: { y2: yStartPos } // Start with zero height
              },
              style: {
                stroke: 'red',
                lineWidth: 2,
              },
            },
            // Element 2: The Animated Label
            {
              type: 'text',
              // Tell ECharts to animate style changes (like opacity)
              transition: ['style'], 
              // Delay the label's animation to let the line draw first
              enterAnimation: { delay: 500 },
              style: {
                text: 'Today',
                fill: 'red',
                fontSize: 10,
                x: xPos,
                y: yEndPos + 5,
                textAlign: 'center',
                textVerticalAlign: 'top',
              },
              // Define the starting style for the animation
              enterFrom: {
                style: { opacity: 0 } // Start fully transparent
              },
            },
          ],
        };
      },
      data: [[formattedDate]],
      // This high z-index ensures the line is drawn ON TOP of the heatmap
      z: 1000, 
      silent: true,
    };
  }
}
